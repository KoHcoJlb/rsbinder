name: Android Test

on:
  workflow_dispatch:
    inputs:
      run_tests:
        description: 'Run Android tests'
        required: true
        default: 'true'
        type: boolean

jobs:
  android-test:
    if: github.actor == github.repository_owner
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Java 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      with:
        api-level: 34

    - name: Install system images and emulator
      run: |
        yes | sdkmanager "system-images;android-34;google_apis;x86_64"
        yes | sdkmanager "emulator"

    - name: Install Android NDK
      run: |
        yes | sdkmanager "ndk;25.2.9519653"
        echo "ANDROID_NDK_ROOT=$ANDROID_SDK_ROOT/ndk/25.2.9519653" >> $GITHUB_ENV
        echo "NDK_HOME=$ANDROID_SDK_ROOT/ndk/25.2.9519653" >> $GITHUB_ENV

    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: aarch64-linux-android

    - name: Install cargo-ndk
      run: cargo install cargo-ndk

    - name: Enable KVM group perms
      run: |
        echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
        sudo udevadm control --reload-rules
        sudo udevadm trigger --name-match=kvm

    - name: Create AVD
      run: |
        echo "Creating AVD..."
        echo "no" | avdmanager create avd --force -n test -k "system-images;android-34;google_apis;x86_64"

    - name: Start emulator in background
      run: |
        echo "Starting emulator..."
        $ANDROID_SDK_ROOT/emulator/emulator -avd test -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none -no-snapshot -wipe-data &
        echo "Emulator started in background"

    - name: Wait for emulator to be ready
      run: |
        echo "Waiting for device..."
        adb wait-for-device
        echo "Device detected, waiting for boot completion..."
        timeout 300 bash -c 'while [[ -z $(adb shell getprop sys.boot_completed 2>/dev/null | tr -d "\r") ]]; do echo "Waiting for boot..."; sleep 5; done'
        echo "Boot completed, unlocking screen..."
        adb shell input keyevent 82
        echo "Emulator is ready"

    - name: Create REMOTE_ANDROID file
      run: |
        cat > REMOTE_ANDROID << EOF
        arm64-v8a
        aarch64
        /data/rsbinder
        EOF

    - name: Run ndk_prepare
      run: |
        source ./envsetup.sh
        ndk_prepare

    - name: Run ndk_build and ndk_sync
      run: |
        source ./envsetup.sh
        ndk_build && ndk_sync

    - name: Run test_service on Android device
      run: |
        adb shell "cd /data/rsbinder && nohup ./test_service > test_service.log 2>&1 &"
        echo "test_service started in background"

    - name: Verify test_service is running
      run: |
        sleep 5
        adb shell "ps | grep test_service" || echo "test_service process check completed"
        adb shell "ls -la /data/rsbinder/"
